// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Outputs": {
    "VpcId": {
      "Description": "VPC ID",
      "Value": {
        "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcA2121C384D1B3CDE",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "EcsConstructDemoAppTargetGroupA1FB262B": {
      "Properties": {
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/health-quick",
        "HealthCheckPort": "3001",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 3001,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "EcsConstructEcsSecurityGroup99862E0E": {
      "Properties": {
        "GroupDescription": "Security Group for ECS Fargate tasks",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::ImportValue": "vpc-stack:ExportsOutputFnGetAttvpcA2121C38CidrBlock8A3D0BD6",
            },
            "Description": "Allow inbound traffic on port 5003 from within the VPC (HTTP from Lambda)",
            "FromPort": 5003,
            "IpProtocol": "tcp",
            "ToPort": 5003,
          },
          {
            "CidrIp": {
              "Fn::ImportValue": "vpc-stack:ExportsOutputFnGetAttvpcA2121C38CidrBlock8A3D0BD6",
            },
            "Description": "Allow inbound traffic on port 5004 from within the VPC (HTTPS from Lambda)",
            "FromPort": 5004,
            "IpProtocol": "tcp",
            "ToPort": 5004,
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EcsConstructEcsSecurityGroupfromtestImportedHttpsListenerSG12D292F13001BF90D50F": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 3001,
        "GroupId": {
          "Fn::GetAtt": [
            "EcsConstructEcsSecurityGroup99862E0E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": "sg-0123456789abcdef0",
        "ToPort": 3001,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EcsConstructEcsSecurityGroupfromtestImportedHttpsListenerSG12D292F15001AC1C5CD5": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 5001,
        "GroupId": {
          "Fn::GetAtt": [
            "EcsConstructEcsSecurityGroup99862E0E",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": "sg-0123456789abcdef0",
        "ToPort": 5001,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EcsConstructEcsService1BC035DC": {
      "DependsOn": [
        "EcsConstructEcsTaskRoleDefaultPolicy3D727EAB",
        "EcsConstructEcsTaskRole6957983A",
        "ImportedHttpsListenerEcsTargetGroup04657527",
        "ImportedHttpsListenerEcsTargetGroupDemoApp7EF3289D",
        "ImportedNLBNlbDemoAppHttpsListenerDemoAppNlbTargetGroupB2AB9F78",
        "ImportedNLBNlbDemoAppHttpsListener3686ACC2",
        "ImportedNLBNlbRouterHttpsListenerB276D34F",
        "ImportedNLBNlbRouterHttpsListenerRouterNlbTargetGroupC3F4735F",
      ],
      "Properties": {
        "CapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1,
          },
        ],
        "Cluster": "my-cluster",
        "DeploymentConfiguration": {
          "Alarms": {
            "AlarmNames": [],
            "Enable": false,
            "Rollback": false,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "LambdaDispatchRouter",
            "ContainerPort": 5001,
            "TargetGroupArn": {
              "Ref": "EcsConstructFargateTargetGroup18C7E4F1",
            },
          },
          {
            "ContainerName": "DemoApp",
            "ContainerPort": 3001,
            "TargetGroupArn": {
              "Ref": "EcsConstructDemoAppTargetGroupA1FB262B",
            },
          },
          {
            "ContainerName": "LambdaDispatchRouter",
            "ContainerPort": 5001,
            "TargetGroupArn": {
              "Ref": "ImportedNLBNlbRouterHttpsListenerRouterNlbTargetGroupC3F4735F",
            },
          },
          {
            "ContainerName": "LambdaDispatchRouter",
            "ContainerPort": 5001,
            "TargetGroupArn": {
              "Ref": "ImportedNLBNlbDemoAppHttpsListenerDemoAppNlbTargetGroupB2AB9F78",
            },
          },
        ],
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": [
              {
                "Fn::GetAtt": [
                  "EcsConstructEcsSecurityGroup99862E0E",
                  "GroupId",
                ],
              },
            ],
            "Subnets": [
              {
                "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271",
              },
              {
                "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE",
              },
            ],
          },
        },
        "TaskDefinition": {
          "Ref": "EcsConstructTaskDefinition7D5C9834",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "EcsConstructEcsServiceTaskCountTarget7FFBF733": {
      "DependsOn": [
        "EcsConstructEcsTaskRoleDefaultPolicy3D727EAB",
        "EcsConstructEcsTaskRole6957983A",
      ],
      "Properties": {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "service/my-cluster/",
              {
                "Fn::GetAtt": [
                  "EcsConstructEcsService1BC035DC",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::123456789012:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "EcsConstructEcsServiceTaskCountTargetCpuScaling5D96B292": {
      "DependsOn": [
        "EcsConstructEcsTaskRoleDefaultPolicy3D727EAB",
        "EcsConstructEcsTaskRole6957983A",
      ],
      "Properties": {
        "PolicyName": "testEcsConstructEcsServiceTaskCountTargetCpuScaling1C444041",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "EcsConstructEcsServiceTaskCountTarget7FFBF733",
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "EcsConstructEcsTaskRole6957983A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsConstructEcsTaskRoleDefaultPolicy3D727EAB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaConstructLambdaFunction8A3CAE86",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:DescribeLogGroups",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EcsConstructServiceLogGroup173B1435",
                  "Arn",
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "LambdaConstructLambdaFunction8A3CAE86",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "LambdaConstructLambdaFunction8A3CAE86",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsConstructEcsTaskRoleDefaultPolicy3D727EAB",
        "Roles": [
          {
            "Ref": "EcsConstructEcsTaskRole6957983A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EcsConstructFargateTargetGroup18C7E4F1": {
      "Properties": {
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/health",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 5001,
        "Protocol": "HTTP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "60",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": {
          "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "EcsConstructServiceLogGroup173B1435": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "EcsConstructTaskDefinition7D5C9834": {
      "Properties": {
        "ContainerDefinitions": [
          {
            "Environment": [
              {
                "Name": "DOTNET_ThreadPool_UnfairSemaphoreSpinLimit",
                "Value": "0",
              },
              {
                "Name": "LAMBDA_DISPATCH_MinWorkerThreads",
                "Value": "1",
              },
              {
                "Name": "LAMBDA_DISPATCH_MaxWorkerThreads",
                "Value": "4",
              },
              {
                "Name": "LAMBDA_DISPATCH_FunctionName",
                "Value": {
                  "Fn::GetAtt": [
                    "LambdaConstructLambdaFunction8A3CAE86",
                    "Arn",
                  ],
                },
              },
              {
                "Name": "LAMBDA_DISPATCH_MaxConcurrentCount",
                "Value": "10",
              },
              {
                "Name": "LAMBDA_DISPATCH_AllowInsecureControlChannel",
                "Value": "true",
              },
              {
                "Name": "LAMBDA_DISPATCH_PreferredControlChannelScheme",
                "Value": "http",
              },
              {
                "Name": "AWS_CLOUDWATCH_LOG_GROUP",
                "Value": {
                  "Ref": "EcsConstructServiceLogGroup173B1435",
                },
              },
            ],
            "Essential": true,
            "Image": "public.ecr.aws/pwrdrvr/lambda-dispatch-router:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "EcsConstructServiceLogGroup173B1435",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "router",
              },
            },
            "Name": "LambdaDispatchRouter",
            "PortMappings": [
              {
                "ContainerPort": 5001,
                "Protocol": "tcp",
              },
              {
                "ContainerPort": 5003,
                "Protocol": "tcp",
              },
              {
                "ContainerPort": 5004,
                "Protocol": "tcp",
              },
            ],
          },
          {
            "Essential": true,
            "Image": "public.ecr.aws/pwrdrvr/lambda-dispatch-demo-app:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "EcsConstructServiceLogGroup173B1435",
                },
                "awslogs-region": "us-east-1",
                "awslogs-stream-prefix": "demo-app",
              },
            },
            "Name": "DemoApp",
            "PortMappings": [
              {
                "ContainerPort": 3001,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "EcsConstructTaskDefinitionExecutionRoleCFBB43FE",
            "Arn",
          ],
        },
        "Family": "testEcsConstructTaskDefinition87BFD1F6",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE",
        ],
        "RuntimePlatform": {
          "CpuArchitecture": "ARM64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "EcsConstructEcsTaskRole6957983A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "EcsConstructTaskDefinitionExecutionRoleCFBB43FE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "EcsConstructTaskDefinitionExecutionRoleDefaultPolicy68CD8F59": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EcsConstructServiceLogGroup173B1435",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EcsConstructTaskDefinitionExecutionRoleDefaultPolicy68CD8F59",
        "Roles": [
          {
            "Ref": "EcsConstructTaskDefinitionExecutionRoleCFBB43FE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ImportedHttpsListenerEcsTargetGroup04657527": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "EcsConstructFargateTargetGroup18C7E4F1",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "HostHeaderConfig": {
              "Values": [
                "lambdadispatch.ghpublic.pwrdrvr.com",
              ],
            },
          },
        ],
        "ListenerArn": "arn:aws:elasticloadbalancing:us-east-1:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c5c1e9977",
        "Priority": 49999,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "ImportedHttpsListenerEcsTargetGroupDemoApp7EF3289D": {
      "Properties": {
        "Actions": [
          {
            "TargetGroupArn": {
              "Ref": "EcsConstructDemoAppTargetGroupA1FB262B",
            },
            "Type": "forward",
          },
        ],
        "Conditions": [
          {
            "Field": "host-header",
            "HostHeaderConfig": {
              "Values": [
                "lambdadispatch-demoapp.ghpublic.pwrdrvr.com",
              ],
            },
          },
        ],
        "ListenerArn": "arn:aws:elasticloadbalancing:us-east-1:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c5c1e9977",
        "Priority": 49998,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "ImportedNLBNlbDemoAppHttpsListener3686ACC2": {
      "Properties": {
        "AlpnPolicy": [
          "HTTP2Optional",
        ],
        "Certificates": [
          {
            "CertificateArn": "arn:aws:acm:us-east-2:220761759939:certificate/ba705c87-4af6-4005-9d6d-d51318fdcbeb",
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ImportedNLBNlbDemoAppHttpsListenerDemoAppNlbTargetGroupB2AB9F78",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-east-1:123456789012:loadbalancer/net/my-load-balancer/50dc6c495c0c9188",
        "Port": 10000,
        "Protocol": "TLS",
        "SslPolicy": "ELBSecurityPolicy-TLS13-1-2-2021-06",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ImportedNLBNlbDemoAppHttpsListenerDemoAppNlbTargetGroupB2AB9F78": {
      "Properties": {
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckPath": "/health-quick",
        "HealthCheckPort": "3001",
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 3001,
        "Protocol": "TCP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "ImportedNLBNlbRouterHttpsListenerB276D34F": {
      "Properties": {
        "AlpnPolicy": [
          "HTTP2Optional",
        ],
        "Certificates": [
          {
            "CertificateArn": "arn:aws:acm:us-east-2:220761759939:certificate/ba705c87-4af6-4005-9d6d-d51318fdcbeb",
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ImportedNLBNlbRouterHttpsListenerRouterNlbTargetGroupC3F4735F",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": "arn:aws:elasticloadbalancing:us-east-1:123456789012:loadbalancer/net/my-load-balancer/50dc6c495c0c9188",
        "Port": 443,
        "Protocol": "TLS",
        "SslPolicy": "ELBSecurityPolicy-TLS13-1-2-2021-06",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "ImportedNLBNlbRouterHttpsListenerRouterNlbTargetGroupC3F4735F": {
      "Properties": {
        "HealthCheckIntervalSeconds": 5,
        "HealthCheckTimeoutSeconds": 2,
        "HealthyThresholdCount": 2,
        "Port": 5001,
        "Protocol": "TCP",
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
        ],
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "LambdaConstructLambdaExecutionRole6995D3C9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaConstructLambdaFunction8A3CAE86": {
      "DependsOn": [
        "LambdaConstructLambdaExecutionRole6995D3C9",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {},
        "Environment": {
          "Variables": {
            "LAMBDA_DISPATCH_RUNTIME": "current_thread",
          },
        },
        "MemorySize": 1769,
        "PackageType": "Image",
        "Role": {
          "Fn::GetAtt": [
            "LambdaConstructLambdaExecutionRole6995D3C9",
            "Arn",
          ],
        },
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "LambdaConstructLambdaSGC3047416",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcPrivateSubnet1Subnet934893E8236E2271",
            },
            {
              "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcPrivateSubnet2Subnet7031C2BA60DCB1EE",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaConstructLambdaFunctionLogRetention9A6370FE": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "LambdaConstructLambdaFunction8A3CAE86",
              },
            ],
          ],
        },
        "RetentionInDays": 7,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "LambdaConstructLambdaSGC3047416": {
      "Properties": {
        "GroupDescription": "Security Group for Lambda function",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Fn::ImportValue": "vpc-stack:ExportsOutputRefvpcA2121C384D1B3CDE",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LambdaDispatchDemoAppRecord8186EE15": {
      "Properties": {
        "AliasTarget": {
          "DNSName": "dualstack.my-load-balancer-1234567890.us-east-1.elb.amazonaws.com",
          "HostedZoneId": "Z3DZXE0Q79N41H",
        },
        "HostedZoneId": "Z005084420J9MD9JNBCUK",
        "Name": "lambdadispatch-demoapp.ghpublic.pwrdrvr.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "LambdaDispatchNLBDemoAppRecord620C9D32": {
      "Properties": {
        "AliasTarget": {
          "DNSName": "dualstack.my-load-balancer-1234567890.us-east-1.elb.amazonaws.com",
          "HostedZoneId": "Z3DZXE0Q79N41H",
        },
        "HostedZoneId": "Z005084420J9MD9JNBCUK",
        "Name": "lambdadispatch-nlb-demoapp.ghpublic.pwrdrvr.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "LambdaDispatchNLBRecordD91391E8": {
      "Properties": {
        "AliasTarget": {
          "DNSName": "dualstack.my-load-balancer-1234567890.us-east-1.elb.amazonaws.com",
          "HostedZoneId": "Z3DZXE0Q79N41H",
        },
        "HostedZoneId": "Z005084420J9MD9JNBCUK",
        "Name": "lambdadispatch-nlb.ghpublic.pwrdrvr.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "LambdaDispatchRecord78A0EA12": {
      "Properties": {
        "AliasTarget": {
          "DNSName": "dualstack.my-load-balancer-1234567890.us-east-1.elb.amazonaws.com",
          "HostedZoneId": "Z3DZXE0Q79N41H",
        },
        "HostedZoneId": "Z005084420J9MD9JNBCUK",
        "Name": "lambdadispatch.ghpublic.pwrdrvr.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
